name: E2E Tests

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  contents: read
  issues: write
  statuses: write

jobs:
  Chekout:
    steps:
      - name: Get PR url
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Checkout PR Branch
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ fromJson(steps.request.outputs.data).head.repo.full_name }}
          ref: ${{ steps.pr_data.outputs.branch }}

  Set-Status:
    if: github.event.issue.pull_request && github.event.comment.body == '/e2e-tests'
    runs-on: ubuntu-latest
    steps:

      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

  Tests:
    if: github.event.issue.pull_request && github.event.comment.body == '/e2e-tests'
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "Running e2e tests..."'

  Test-result:
    name: E2E result
    needs: [Tests]
    if: github.event.issue.pull_request && github.event.comment.body == '/e2e-tests'
    runs-on: ubuntu-latest
    steps:

      - name: Add comment to PR
        uses: actions/github-script@v6
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ needs.Tests.result }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch
        
      - name: Set latest commit status as ${{ needs.Tests.result }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ needs.Tests.result }}
